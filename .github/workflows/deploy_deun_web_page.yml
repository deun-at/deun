name: Deploy Deun Web Page

permissions:
  pull-requests: write
  contents: write
  repository-projects: write

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Step 2: Set up Flutter
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      # Step 3: Install dependencies
      - name: Install Flutter Dependencies
        run: flutter pub get

      # Step 4: Add Environment Variables
      - name: Add Environment Variables
        run: |
          mkdir .env_flutter

          # Create the development.env file within the folder
          touch ".env_flutter/development.env"

          # Add content to the Env file
          echo "SUPABASE_URL=${{ secrets.SUPABASE_URL }}" >> .env_flutter/development.env
          echo "SUPABASE_ANON_KEY=${{ secrets.SUPABASE_ANON_KEY }}" >> .env_flutter/development.env

          echo "development.env file created with all the keys..............."

          echo "$(<.env_flutter/development.env )"

      # Step 5: Build Flutter Web
      - name: Build Flutter Web
        run: flutter build web --base-href / --release --dart-define-from-file .env_flutter/development.env
      
      # Step 6: Add github run_number
      - name: Add github run_number
        run: |
          touch "build/web/version.txt"
          echo "${{ github.run_number }}" >> build/web/version.txt
      
      # Step 7: Configure SSH
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DEPLOY_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts
      
      # Step 8: Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: main       # The branch of your GitHub Pages repo.
          folder: build/web  # The build output directory.
          repository-name: deun-at/deun-at.github.io
          ssh-key: ${{ secrets.DEPLOY_KEY }}
          clean: true   # Ensures old files are removed
